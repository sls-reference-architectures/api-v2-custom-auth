"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getAcceptHeaderPlugin = exports.acceptHeaderMiddlewareOptions = exports.acceptHeaderMiddleware = void 0;
const protocol_http_1 = require("@aws-sdk/protocol-http");
function acceptHeaderMiddleware() {
    return (next) => async (args) => {
        const { request } = args;
        if (protocol_http_1.HttpRequest.isInstance(request)) {
            request.headers = {
                ...request.headers,
                accept: "application/json",
            };
        }
        return next({
            ...args,
            request,
        });
    };
}
exports.acceptHeaderMiddleware = acceptHeaderMiddleware;
exports.acceptHeaderMiddlewareOptions = {
    step: "build",
    tags: ["SET_ACCEPT_HEADER", "ACCEPT_HEADER"],
    name: "acceptHeaderMiddleware",
    override: true,
};
const getAcceptHeaderPlugin = (unused) => ({
    applyToStack: (clientStack) => {
        clientStack.add(acceptHeaderMiddleware(), exports.acceptHeaderMiddlewareOptions);
    },
});
exports.getAcceptHeaderPlugin = getAcceptHeaderPlugin;
